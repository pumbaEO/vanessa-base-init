
&НаКлиенте
Процедура ГенерацияДанных(Команда)
	Результат = ГенерацияДанныхНаСервере();
	
	Данные = ПолучитьИзВременногоХранилища(Результат);
		
	Текст = Новый ТекстовыйДокумент;
	Текст.УстановитьТекст(Данные.Процедура);
	Текст.Показать("Процедура");
	
	Текст = Новый ТекстовыйДокумент;
	Текст.УстановитьТекст(Данные.СписокТестов);
	Текст.Показать("СписокТестов");
	
	Для каждого ОписаниеМакета из Данные.МассивМакетов Цикл
		Если СтрДлина(ОписаниеМакета.Макет.ПолучитьТекст()) > 3 Тогда
			ОписаниеМакета.Макет.Показать(ОписаниеМакета.ИмяМакета);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ГенерацияДанныхНаСервере()
	Результат = Новый Структура();
	Результат.Вставить("ТекстОписанияТестов", "");
	Результат.Вставить("ТекстПроцедурУстановитьКонстанты", "");
	
	ОбъектНаСервере = РеквизитФормыВЗначение("Объект");
	
	Если ВыгружатьКонстанты = Истина Тогда 
		
		МассивКонстантИсключений = Новый Массив;
		МассивКонстантИсключений.Добавить("ИдентификаторИнформационнойБазы");
		Данные = ОбъектНаСервере.СгенерироватьУстановкуКонстатнтxUnit(ПутьКГенераторуFixtures, МассивКонстантИсключений);
		Возврат ПоместитьВоВременноеХранилище(Данные, ЭтаФорма.УникальныйИдентификатор);

		//Результат = 
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПутьКГенераторуFixturesНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыВыбора = Новый Структура("Элемент", Элемент);
	ПараметрыВыбора.Вставить("Значение", "ПутьКГенераторуFixtures");
	СтандартнаяОбработка = Ложь;
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Фильтр = НСтр("en='External processing form files (*.epf, *.erf)|*.epf; *.erf'; ru='Файлы внешних обработок (*.epf, *.erf)|*.epf; *.erf'");
	ДиалогОткрытияФайла.Заголовок = НСтр("en='Choose an external processing form file'; ru='Выберите файл с внешней обработкой'");
	ДиалогОткрытияФайла.ПроверятьСуществованиеФайла = Истина;
	ФайлКаталог = Новый Файл(ДанныеВыбора); Каталог = ?(ФайлКаталог.Существует(), ФайлКаталог.Путь, "");
	Если Не ПустаяСтрока(Каталог) Тогда 
		ДиалогОткрытияФайла.Каталог = Каталог;
	КонецЕсли;
	
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		Оповещение = Вычислить("Новый ОписаниеОповещения(""ПослеВыбораФайла"", ЭтаФорма, ПараметрыВыбора)");
		ДиалогОткрытияФайла.Показать(Оповещение);
	ИначеЕсли ДиалогОткрытияФайла.Выбрать() Тогда
		ПослеВыбораФайла(ДиалогОткрытияФайла.ВыбранныеФайлы, ПараметрыВыбора);
	КонецЕсли;
	
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеВыбораФайла(ВыбранныеФайлы, ПараметрыВыбора) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранныеФайлы.Количество() > 0 Тогда 
		ЭтаФорма[ПараметрыВыбора.Значение] = ВыбранныеФайлы.Получить(0);
	КонецЕсли;
	
КонецПроцедуры



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЕстьПоддержкаАсинхронныхВызовов = Ложь;
	Попытка
		  ЕстьПоддержкаАсинхронныхВызовов = Вычислить("Метаданные.РежимИспользованияСинхронныхВызововРасширенийИВнешнихКомпонент <> Метаданные.СвойстваОбъектов.РежимИспользованияСинхронныхВызововРасширенийИВнешнихКомпонент.Использовать");
	Исключение;	КонецПопытки; 
	
КонецПроцедуры
